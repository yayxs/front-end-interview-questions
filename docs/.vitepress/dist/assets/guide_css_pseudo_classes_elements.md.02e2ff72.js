import{o as a,c as s,a as n}from"./app.0c83b2b0.js";const t='{"title":"伪类和伪元素的区别是什么呢 ？css3 新增的伪类有哪些","description":"","frontmatter":{"title":"伪类和伪元素的区别是什么呢 ？css3 新增的伪类有哪些"},"headers":[{"level":2,"title":"::after 和:after 的区别","slug":"after-和-after-的区别"}],"relativePath":"guide/css/pseudo_classes_elements.md","lastUpdated":1615877423021}',p={},e=n('<h1 id="伪类和伪元素的区别-css3-新增的伪类有哪些"><a class="header-anchor" href="#伪类和伪元素的区别-css3-新增的伪类有哪些" aria-hidden="true">#</a> 伪类和伪元素的区别 css3 新增的伪类有哪些</h1><p><strong>首先伪类和伪元素都是选择器</strong> 诸如 标签 类选择器等等</p><ul><li><p>伪元素：页面里不存在的元素在代码里没有明确的声明 :before和:after（CSS2就已经存在）也可以写作 ::before/::after 两个冒号的形式（兼容低版本的建议使用单个冒号历史遗留的问题）</p></li><li><p>伪类：指的是一种状态选择器 比如鼠标划过DOM的状态 :hover :focus和:checked，状态下的演示</p></li></ul><h2 id="after-和-after-的区别"><a class="header-anchor" href="#after-和-after-的区别" aria-hidden="true">#</a> ::after 和:after 的区别</h2><p>两个冒号的形式（兼容低版本的建议使用单个冒号历史遗留的问题）</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>p-box<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>:before<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>\n    CSS\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>:after<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><p>一般情况下<code>伪元素</code>配合 content 来使用</p><div class="language-scss"><pre><code><span class="token selector">.p-box</span><span class="token punctuation">{</span>\n  <span class="token selector"><span class="token parent important">&amp;</span>::before</span><span class="token punctuation">{</span>\n    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">&#39;before&#39;</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token selector"><span class="token parent important">&amp;</span>::after</span><span class="token punctuation">{</span>\n    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">&#39;after&#39;</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre></div>',8);p.render=function(n,t,p,o,c,l){return a(),s("div",null,[e])};export default p;export{t as __pageData};
