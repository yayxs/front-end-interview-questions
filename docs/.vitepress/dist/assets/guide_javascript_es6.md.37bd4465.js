import{o as n,c as s,a}from"./app.78bcef79.js";const t='{"title":"es6 的新特性都有哪些？","description":"","frontmatter":{"title":"es6 的新特性都有哪些？"},"headers":[{"level":2,"title":"模板字面量 JavaScript句法表达式","slug":"模板字面量-javascript句法表达式"},{"level":3,"title":"模板字面量","slug":"模板字面量"}],"relativePath":"guide/javascript/es6.md","lastUpdated":1625578114448}',p={},o=a('<h2 id="模板字面量-javascript句法表达式"><a class="header-anchor" href="#模板字面量-javascript句法表达式" aria-hidden="true">#</a> 模板字面量 JavaScript句法表达式</h2><ul><li>模板字面量不是字符串，而是一种特殊的JavaScript句法表达式，只不过求值后得到的是字符串</li><li>字符串插值通过在${}中使用一个JavaScript表达式实现</li><li>模板字面量标签函数</li></ul><h3 id="模板字面量"><a class="header-anchor" href="#模板字面量" aria-hidden="true">#</a> 模板字面量</h3><div class="language-js"><pre><code>  <span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n    b <span class="token operator">=</span><span class="token number">2</span>\n    <span class="token keyword">const</span> <span class="token function-variable function">foo</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">strs<span class="token punctuation">,</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>sum</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>strs<span class="token punctuation">)</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sum<span class="token punctuation">)</span>\n      <span class="token keyword">return</span> <span class="token string">&#39;foo&#39;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>a<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">+</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>b<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>a<span class="token operator">+</span>b<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span>\n    <span class="token keyword">let</span> finRes <span class="token operator">=</span> foo<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>a<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">+</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>b<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>a<span class="token operator">+</span>b<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>finRes<span class="token punctuation">)</span>\n</code></pre></div><div class="language-js"><pre><code><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;+&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;=&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> raw<span class="token operator">:</span> <span class="token function">Array</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">]</span>\nindex<span class="token punctuation">.</span>html<span class="token operator">:</span><span class="token number">14</span> <span class="token number">1</span>\nindex<span class="token punctuation">.</span>html<span class="token operator">:</span><span class="token number">15</span> <span class="token number">2</span>\nindex<span class="token punctuation">.</span>html<span class="token operator">:</span><span class="token number">16</span> <span class="token number">3</span>\nindex<span class="token punctuation">.</span>html<span class="token operator">:</span><span class="token number">22</span> <span class="token number">1</span><span class="token operator">+</span><span class="token number">2</span><span class="token operator">=</span><span class="token number">3</span>\nindex<span class="token punctuation">.</span>html<span class="token operator">:</span><span class="token number">23</span> foo\n</code></pre></div>',5);p.render=function(a,t,p,e,c,l){return n(),s("div",null,[o])};export default p;export{t as __pageData};
