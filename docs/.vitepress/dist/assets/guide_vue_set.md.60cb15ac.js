import{o as n,c as s,a}from"./app.78bcef79.js";const t='{"title":"Vue怎么用vm.$set()解决对象新增属性不能响应的问题？","description":"","frontmatter":{"title":"Vue怎么用vm.$set()解决对象新增属性不能响应的问题？"},"relativePath":"guide/vue/set.md","lastUpdated":1625578115408}',p={},e=a('<h1 id="vue怎么用vm-set-解决对象新增属性不能响应的问题？"><a class="header-anchor" href="#vue怎么用vm-set-解决对象新增属性不能响应的问题？" aria-hidden="true">#</a> Vue怎么用vm.$set()解决对象新增属性不能响应的问题？</h1><p>vue中依赖收集大体分两个时机，一个是属性值被改变的时候 还有就是 $set 或者 Vue.set 给数据添加新属性的时候，由于<code>js</code> 语言的限制 在没有<code>Proxy</code> 之前 Vue 没办法拦截到给对象添加的新属性。所以vue 暴露出 $set 以及 Vue.set 等方法让我们有能力在 给对象添加新属性的时候触发依赖</p><p>向响应式对象中添加一个 property，并确保这个新 property 同样是响应式的，且触发视图更新。它必须用于向响应式对象上添加新 property，因为 Vue 无法探测普通的新增 property (比如 this.myObject.newProperty = &#39;hi&#39;) <strong>注意对象不能是 Vue 实例，或者 Vue 实例的根数据对象。</strong></p><div class="language-js"><pre><code>\n <span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            el<span class="token operator">:</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">,</span>\n            methods<span class="token operator">:</span> <span class="token punctuation">{</span>\n                <span class="token function">handleClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;点击事件已经触发&#39;</span><span class="token punctuation">)</span>\n                    <span class="token comment">// this.obj.name = &#39;yayxs&#39;</span>\n                    vm<span class="token punctuation">.</span><span class="token function">$set</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>obj<span class="token punctuation">,</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;yayxs&#39;</span><span class="token punctuation">)</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            data<span class="token operator">:</span><span class="token punctuation">{</span>\n                obj<span class="token operator">:</span><span class="token punctuation">{</span><span class="token punctuation">}</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div>',4);p.render=function(a,t,p,o,c,u){return n(),s("div",null,[e])};export default p;export{t as __pageData};
