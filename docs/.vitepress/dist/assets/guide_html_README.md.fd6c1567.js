import{o as a,c as t,e as n,a as e}from"./app.78bcef79.js";const s='{"title":"HTML常考面试题汇总","description":"","frontmatter":{"title":"HTML常考面试题汇总"},"headers":[{"level":2,"title":"什么是web 标准","slug":"什么是web-标准"},{"level":2,"title":"<!DOCTYPE html>的作用与意义是什么？","slug":"doctype-html-的作用与意义是什么？"},{"level":2,"title":"一般有几种DOCTYPE 文档类型","slug":"一般有几种doctype-文档类型"},{"level":2,"title":"<img /> 中 alt 和 title 的区别及作用","slug":"img-中-alt-和-title-的区别及作用"},{"level":2,"title":"href和src有什么区别","slug":"href和src有什么区别"},{"level":2,"title":"HTML的常见元素以及分类","slug":"html的常见元素以及分类"},{"level":2,"title":"html中的空元素有哪些","slug":"html中的空元素有哪些"},{"level":2,"title":"相对路径的几种常见写法","slug":"相对路径的几种常见写法"},{"level":2,"title":"HTML的常见的块级元素与内联元素","slug":"html的常见的块级元素与内联元素"},{"level":2,"title":"元数据meta有哪些属性，作用是什么","slug":"元数据meta有哪些属性，作用是什么"},{"level":2,"title":"关于HTML 的语义化","slug":"关于html-的语义化"},{"level":2,"title":"<em> 和<i> 有什么区别","slug":"em-和-i-有什么区别"},{"level":2,"title":"是否用过a的download属性","slug":"是否用过a的download属性"},{"level":2,"title":"是否使用过<video> 有哪些常见的属性","slug":"是否使用过-video-有哪些常见的属性"},{"level":2,"title":"XHTML(XML)和 HTML5 有什么区别","slug":"xhtml-xml-和-html5-有什么区别"},{"level":2,"title":"form表单的属性有哪些？作用是什么","slug":"form表单的属性有哪些？作用是什么"},{"level":3,"title":"属性","slug":"属性"},{"level":3,"title":"作用","slug":"作用"},{"level":2,"title":"table 表格相关的属性有哪些","slug":"table-表格相关的属性有哪些"},{"level":2,"title":"如何处理 HTML5 新标签的浏览器兼容问题？","slug":"如何处理-html5-新标签的浏览器兼容问题？"},{"level":2,"title":"HTML的嵌套关系是如何确定的，哪些嵌套关系是不可能发生","slug":"html的嵌套关系是如何确定的，哪些嵌套关系是不可能发生"},{"level":2,"title":"哪些元素可以自闭和","slug":"哪些元素可以自闭和"},{"level":2,"title":"HTML和DOM的关系是什么","slug":"html和dom的关系是什么"},{"level":2,"title":"property特性 和attribute属性 的区别是什么","slug":"property特性-和attribute属性-的区别是什么"},{"level":2,"title":"常见的浏览器内核有哪些","slug":"常见的浏览器内核有哪些"},{"level":2,"title":"你能描述一下渐进增强和优雅降级之间的不同吗?","slug":"你能描述一下渐进增强和优雅降级之间的不同吗"},{"level":2,"title":"知道的网页制作会用到的图片格式有哪些？没有了解过 webp？","slug":"知道的网页制作会用到的图片格式有哪些？没有了解过-webp？"},{"level":3,"title":"常见的图片类型","slug":"常见的图片类型"},{"level":3,"title":"常见的图片格式","slug":"常见的图片格式"},{"level":2,"title":"说说HTML5在标签、属性、存储、API 上的新特性，移除了那些元素？","slug":"说说html5在标签、属性、存储、api-上的新特性，移除了那些元素？"},{"level":3,"title":"标签方面","slug":"标签方面"},{"level":3,"title":"存储方面","slug":"存储方面"},{"level":3,"title":"新的 api","slug":"新的-api"},{"level":3,"title":"移除的元素","slug":"移除的元素"}],"relativePath":"guide/html/README.md","lastUpdated":1625578109839}',l={},o=e('<blockquote><ul><li><p>本文所有内容范围是<code>HTML</code> 仅含有较少的<code>CSS</code> 与<code>浏览器</code>相关。收录在仓库： <a href="https://github.com/yayxs/top-fe-iqa" target="_blank" rel="noopener noreferrer">……top-fe-iqa</a></p></li><li><p>首次发布时间 2020 年 11 月 30 日</p></li><li><p>更新时间：待定</p></li><li><p>建议阅读地址：<a href="https://top-fe-iqa.netlify.app/guides/html/" target="_blank" rel="noopener noreferrer">……guides/html/</a></p></li><li><p>建议阅读时长：30min</p></li><li><p>建议阅读对象：准备跳槽或正在面试前端开发工程师</p></li></ul></blockquote><h1 id="html-头部高频面试题及参考答案"><a class="header-anchor" href="#html-头部高频面试题及参考答案" aria-hidden="true">#</a> HTML 头部高频面试题及参考答案</h1><div class="language-html"><pre><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>viewport<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>width=device-width, initial-scale=1.0<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>我是第一个html<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><h2 id="什么是web-标准"><a class="header-anchor" href="#什么是web-标准" aria-hidden="true">#</a> 什么是<code>web</code> 标准</h2><p><code>web标准</code>是网页制作的标准，它不是一个标准，是一系列标准，大部分的标准由<code>W3C</code>制定，还有一部分标准由<code>ECMA</code>制定。<code>web标准</code>由结构（html,xhtml），表现（css）,行为（js）三个方面构成.</p><ul><li><p>W3C—万维网联盟（结构标准和表现标准）</p></li><li><p>ECMA—欧洲电脑厂商联合会（行为标准）</p></li></ul><h2 id="doctype-html-的作用与意义是什么？"><a class="header-anchor" href="#doctype-html-的作用与意义是什么？" aria-hidden="true">#</a> <code>&lt;!DOCTYPE html&gt;</code>的作用与意义是什么？</h2><p>前提需要了解盒模型，保证文档正常的读取</p><ul><li>让浏览器以标准模式渲染，所谓标准模式，使用的是<code>W3C</code>的标准；还有另外一种模式是：怪异模式</li><li>让浏览器知道元素的合法性</li></ul><h2 id="一般有几种doctype-文档类型"><a class="header-anchor" href="#一般有几种doctype-文档类型" aria-hidden="true">#</a> 一般有几种<code>DOCTYPE </code>文档类型</h2><p>IE5.5 发明了文档模式的概念</p><ul><li>HTML 4.01 规定了三种文档类型：Strict、Transitional 以及 Frameset。</li><li>XHTML 1.0 规定了三种 XML 文档类型：Strict、Transitional 以及 Frameset。</li><li>Standards （标准）模式（也就是严格呈现模式）用于呈现遵循最新标准的网页，</li><li>Quirks（包容）模式（也就是松散呈现模式或者兼容模式）用于呈现为传统浏览器而设计的网页。</li></ul><h2 id="img-中-alt-和-title-的区别及作用"><a class="header-anchor" href="#img-中-alt-和-title-的区别及作用" aria-hidden="true">#</a> <code>&lt;img /&gt;</code> 中 <code>alt</code> 和 <code>title</code> 的区别及作用</h2><ul><li>alt 替换资源 当图片没有显示 显示 alt 的替换文本 <ul><li>用户有视力障碍</li><li>浏览器不支持该图片类型</li><li>用户关闭的图片显示以减少数据的传输</li></ul></li><li>title 就是标签上的属性了，放在图片上显示的内容 <ul><li>图片标题并不必须要包含有意义的信息，通常来说，将这样的支持信息放到主要文本中而不是附着于图片会更好。</li></ul></li></ul><h2 id="href和src有什么区别"><a class="header-anchor" href="#href和src有什么区别" aria-hidden="true">#</a> <code>href</code>和<code>src</code>有什么区别</h2><ul><li><code>href</code> 属性也可以称为目标，指向网络资源的位置，简历超链接</li><li><code>src</code> 属性包含了指向我们想要引入的图片的路径，可以是相对路径或绝对 URL，就像 <code>a</code>元素的 <code>href</code> 属性一样。但是是指向的外部资源的位置，</li></ul><h2 id="html的常见元素以及分类"><a class="header-anchor" href="#html的常见元素以及分类" aria-hidden="true">#</a> <code>HTML</code>的常见元素以及分类</h2><ul><li>标签 head 区的元素：不会在页面直接显示 包含<code>title标题</code> <code>一些元数据</code></li><li>body 中的元素 <ul><li><code>&lt;p&gt;段落</code> <code>列表&lt;ul&gt; &lt;ol&gt; &lt;li&gt;</code> <code>&lt;a&gt;</code> <code>描述列表&lt;dl&gt; dt dd</code> <code>日期时间 &lt;time&gt;</code> <code>br</code> <code>hr</code></li><li><code>main</code> 每个页面上只能用一次</li><li><code>article</code> 包围的内容即一篇文章，与页面其它部分无关</li><li><code>section</code> 更适用于组织页面使其按功能</li><li><code>aside</code> <code>header</code> <code>footer</code> <code>nav</code></li></ul></li></ul><h2 id="html中的空元素有哪些"><a class="header-anchor" href="#html中的空元素有哪些" aria-hidden="true">#</a> <code>html</code>中的<code>空元素</code>有哪些</h2><ul><li>不包含任何内容的元素称为空元素。比如 <code>&lt;img /&gt;</code>元素</li><li><code>&lt;br /&gt; </code> <code>&lt;hr /&gt;</code> <code>&lt;link/&gt;</code> 等</li></ul><h2 id="相对路径的几种常见写法"><a class="header-anchor" href="#相对路径的几种常见写法" aria-hidden="true">#</a> 相对路径的几种常见写法</h2><ul><li><p>当前文件和目标文件在同一目录下时，写法： 目标文件名+扩展名</p></li><li><p>当前文件和目标文件所处文件夹在同一目录下，写法： 目标文件所处文件夹名/目标文件名+扩展名</p></li><li><p>当前文件所处文件夹和目标文件所处文件夹在同一目录下，写法：../目标文件所处文件夹名/目标文件名+扩展名</p></li></ul><h2 id="html的常见的块级元素与内联元素"><a class="header-anchor" href="#html的常见的块级元素与内联元素" aria-hidden="true">#</a> <code>HTML</code>的常见的块级元素与内联元素</h2><ul><li><p>按照默认的样式分类</p><ul><li><p>块级元素（block）<code>div</code> <code>ul</code> <code>li</code> <code>h</code> <code>p</code></p><ul><li><code>div</code> 是一个块级无语义元素，应仅用于找不到更好的块级元素时，或者不想增加特定的意义时。</li></ul></li><li><p>行内元素（inline）:<code>a</code> <code>span</code> <code>i</code> <code>img</code> <code>input</code> <code>select</code></p></li><li><p>内联块级元素 inline-block</p><ul><li><code>span</code> 是一个内联的（inline）无语义元素</li></ul></li></ul></li></ul><h2 id="元数据meta有哪些属性，作用是什么"><a class="header-anchor" href="#元数据meta有哪些属性，作用是什么" aria-hidden="true">#</a> <code>元数据meta</code>有哪些属性，作用是什么</h2><ul><li><code>charset</code> 字符集 通常情况下使用 utf-8 保证编码的问题</li><li><code>name </code> 指定 meta 元素的类型，说明钙元素包含什么类型的信息</li><li><code>content</code> 实际元数据内容</li></ul><div class="language-html"><pre><code><span class="token comment">&lt;!--文档中字符编码--&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>utf-8<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n<span class="token comment">&lt;!--主要I是强制让文档的宽度与设备宽度保持1:1，最大宽度1.0，禁止屏幕缩放。--&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span>\n  <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>width=device-width,initial-scale=1.0,maximum-scale=1.0,user-scalable=no<span class="token punctuation">&quot;</span></span>\n  <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>viewport<span class="token punctuation">&quot;</span></span>\n<span class="token punctuation">/&gt;</span></span>\n<span class="token comment">&lt;!--这个也是iphone私有标签，允许全屏浏览。--&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>yes<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>apple-mobile-web-app-capable<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n<span class="token comment">&lt;!--iphone的私有标签，iphone顶端状态条的样式。--&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>black<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>apple-mobile-web-app-status-bar-style<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n<span class="token comment">&lt;!--禁止数字自动识别为电话号码，这个比较有用，因为一串数字在iphone上会显示成蓝色，样式加成别的颜色也是不生效的。--&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>telephone=no<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>format-detection<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n<span class="token comment">&lt;!--禁止email识别--&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>email=no<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>format-detection<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n</code></pre></div><h2 id="关于html-的语义化"><a class="header-anchor" href="#关于html-的语义化" aria-hidden="true">#</a> 关于<code>HTML</code> 的语义化</h2><p>我们可以通过 <a href="https://h5o.github.io/" target="_blank" rel="noopener noreferrer">https://h5o.github.io/</a> 来查看文档的结构。较好的语义化内容，能够更好的便于搜索引擎爬取</p><ul><li>开发者容易理解</li><li>机器容易理解（搜索、读屏、软件）</li><li>有助于 SEO</li></ul><h2 id="em-和-i-有什么区别"><a class="header-anchor" href="#em-和-i-有什么区别" aria-hidden="true">#</a> <code>&lt;em&gt;</code> 和<code>&lt;i&gt;</code> 有什么区别</h2><ul><li>em 是语义化的标签,意义清楚的语义元素</li><li>i 纯样式的问题 仅仅影响表象而且没有语义，被称为<strong>表象元素</strong></li></ul><h2 id="是否用过a的download属性"><a class="header-anchor" href="#是否用过a的download属性" aria-hidden="true">#</a> 是否用过<code>a</code>的<code>download属性</code></h2><ul><li><p>使用 download 属性来提供一个默认的保存文件名</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span>\n  <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://download.mozilla.org/?product=firefox-latest-ssl&amp;os=win64&amp;lang=zh-CN<span class="token punctuation">&quot;</span></span>\n  <span class="token attr-name">download</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>firefox-latest-64bit-installer.exe<span class="token punctuation">&quot;</span></span>\n<span class="token punctuation">&gt;</span></span>\n  下载最新的 Firefox 中文版 - Windows（64位）\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div></li></ul><h2 id="是否使用过-video-有哪些常见的属性"><a class="header-anchor" href="#是否使用过-video-有哪些常见的属性" aria-hidden="true">#</a> 是否使用过<code>&lt;video&gt;</code> 有哪些常见的属性</h2><ul><li><p><code>src</code> 展示视频的地址,指向网页中的视频资源</p></li><li><p><code>controls</code> 视频展示浏览器自带的控件界面，一般情况下我们是使用自己自定义的控件</p></li><li><p>controlslist 当浏览器显示自己的控件集(例如，当指定了 Controls 属性时)，Controlslist 属性将帮助浏览器选择在媒体元素上显示的控件。</p></li><li><p>object-position 调整视频元素内部的位置</p></li><li><p>buffered 这个属性可以读取到哪段时间范围内的媒体被缓存了</p></li><li><p>poster 一个海报帧的 URL，用于在用户播放或者跳帧之前展示</p></li><li><p>preload 用户需要这个视频优先加载；换句话说就是提示：如果需要的话，可以下载整个视频，即使用户并不一定会用它。</p></li><li><p>muted 布尔属性，指明了视频里的音频的默认设置。设置后，音频会初始化为静音。</p></li></ul><h2 id="xhtml-xml-和-html5-有什么区别"><a class="header-anchor" href="#xhtml-xml-和-html5-有什么区别" aria-hidden="true">#</a> <code>XHTML(XML)</code>和 <code>HTML5</code> 有什么区别</h2><table><thead><tr><th>HTML</th><th>HTML4</th><th>XHTML</th><th>HTML5</th></tr></thead><tbody><tr><td>HTML 指超文本标签语言</td><td>标签可以不结束</td><td>XHTML 是更严谨更纯净的 HTML 版本</td><td>HTML 5 是下一代的 HTML。</td></tr><tr><td>混乱松散</td><td>属性不用带引号</td><td>标签必须结束</td><td>不属于之前的规范</td></tr><tr><td>属于 SGML</td><td>标签属性可以大写</td><td>属性带引号 标签属性小写</td><td></td></tr><tr><td></td><td>脚本标签有<code>type</code></td><td></td><td></td></tr></tbody></table><h2 id="form表单的属性有哪些？作用是什么"><a class="header-anchor" href="#form表单的属性有哪些？作用是什么" aria-hidden="true">#</a> <code>form</code>表单的属性有哪些？作用是什么</h2><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&quot;</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>post<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><h3 id="属性"><a class="header-anchor" href="#属性" aria-hidden="true">#</a> 属性</h3><ul><li>action 提交的地址</li><li>method 通过什么方式提交</li><li>enctype</li></ul><h3 id="作用"><a class="header-anchor" href="#作用" aria-hidden="true">#</a> 作用</h3><ul><li>直接提交表单</li><li>便于浏览器保存表单</li><li>使用 submit reset 按钮</li><li>第三方的库可以整体提取值</li><li>第三方库可以进行表单的验证</li></ul><h2 id="table-表格相关的属性有哪些"><a class="header-anchor" href="#table-表格相关的属性有哪些" aria-hidden="true">#</a> <code>table</code> 表格相关的属性有哪些</h2><ul><li><p><code>width=&quot;值&quot; </code> 设置表格宽度或单元格宽度</p></li><li><p><code>height=&quot;值&quot; </code> 设置表格高度或单元格高度</p></li><li><p><code>border=&quot;值&quot;</code> 设置表格边框（一般给 table 加）</p></li><li><p><code>cellspacing=&quot;值&quot;</code> 设置单元格之间的间距（给 table 加，一般设为 0）</p></li><li><p><code>cellpadding=&quot;值&quot;</code> 设置内容与单元格之间的空隙（给 table 加，一般设为 0）</p></li><li><p><code>align=&quot;left|center|right&quot;</code> 设置单元格内容水平对齐方式</p></li><li><p><code>valign=&quot;top|middle|bottom&quot;</code> 设置单元格内容垂直对齐方式</p></li><li><p><code>bgcolor=&quot;颜色值&quot; </code> 设置表格背景色（一般通过 css 样式去设置）</p></li><li><p><code>colspan=&quot;数值&quot;</code> 合并列（给 td 加）</p></li><li><p><code>rowspan=&quot;数值&quot;</code> 合并行（给 td 加）</p></li></ul><h2 id="如何处理-html5-新标签的浏览器兼容问题？"><a class="header-anchor" href="#如何处理-html5-新标签的浏览器兼容问题？" aria-hidden="true">#</a> 如何处理 HTML5 新标签的浏览器兼容问题？</h2><ul><li>IE8/IE7/IE6 支持通过 document.createElement 方法产生的标签，可以利用这一特性让这些浏览器支持 HTML5 新标签，</li><li>浏览器支持新标签后，还需要添加标签默认的样式：</li><li>当然最好的方式是直接使用成熟的框架、使用最多的是 html5shim 框架</li></ul><h2 id="html的嵌套关系是如何确定的，哪些嵌套关系是不可能发生"><a class="header-anchor" href="#html的嵌套关系是如何确定的，哪些嵌套关系是不可能发生" aria-hidden="true">#</a> <code>HTML</code>的嵌套关系是如何确定的，哪些嵌套关系是不可能发生</h2><ul><li>块级元素可以包含行内元素</li><li>行内元素一般不能包含块级元素 a 元素是可以包含 div</li><li>块级元素不一定能包含块级元素</li></ul><h2 id="哪些元素可以自闭和"><a class="header-anchor" href="#哪些元素可以自闭和" aria-hidden="true">#</a> 哪些元素可以自闭和</h2><ul><li>表单元素<code>input</code> <code>图片元素&lt;img&gt;</code> <code>&lt;br&gt;</code> <code>&lt;hr&gt;</code> <code>meta</code> <code>link</code></li></ul><h2 id="html和dom的关系是什么"><a class="header-anchor" href="#html和dom的关系是什么" aria-hidden="true">#</a> <code>HTML</code>和<code>DOM</code>的关系是什么</h2><ul><li>DOM 是 HTML 解析而来的</li><li>HTML 是<code>死</code>的</li><li>JS 维护的是 DOM</li></ul><h2 id="property特性-和attribute属性-的区别是什么"><a class="header-anchor" href="#property特性-和attribute属性-的区别是什么" aria-hidden="true">#</a> <code>property特性</code> 和<code>attribute属性</code> 的区别是什么</h2><ul><li>attribute 属性 <ul><li>通过 getAttribute 来获取 是写死的</li></ul></li><li>property 特性</li></ul><h2 id="常见的浏览器内核有哪些"><a class="header-anchor" href="#常见的浏览器内核有哪些" aria-hidden="true">#</a> 常见的浏览器内核有哪些</h2>',57),p=e('<blockquote><p>浏览器最重要或者说核心的部分是“Rendering Engine”，可大概译为“渲染引擎”，不过我们一般习惯将之称为“浏览器内核”。</p></blockquote><p><strong>不同的浏览器内核对网页编写语法的解释也有不同，因此同一网页在不同的内核的浏览器里的渲染（显示）效果也可能不同，这也是网页编写者需要在不同内核的浏览器中测试网页显示效果的原因。</strong></p><table><thead><tr><th>内核分类</th><th>采用该内核的浏览器</th></tr></thead><tbody><tr><td>Trident（<strong>IE</strong>）</td><td>IE、傲游、世界之窗浏览器、Avant、腾讯 TT、Sleipnir、GOSURF、GreenBrowser 和 KKman 等。</td></tr><tr><td>Gecko(<strong>火狐</strong>)</td><td>[Mozilla Firefox](<a href="https://baike.baidu.com/item/Mozilla" target="_blank" rel="noopener noreferrer">https://baike.baidu.com/item/Mozilla</a> Firefox)、Mozilla SeaMonkey、waterfox（Firefox 的 64 位开源版）、Iceweasel、Epiphany（早期版本）、Flock（早期版本）、K-Meleon。</td></tr><tr><td>Webkit（<strong>谷歌</strong>）</td><td>Google Chrome、<a href="https://baike.baidu.com/item/360%E6%9E%81%E9%80%9F%E6%B5%8F%E8%A7%88%E5%99%A8" target="_blank" rel="noopener noreferrer">360 极速浏览器</a>以及<a href="https://baike.baidu.com/item/%E6%90%9C%E7%8B%97%E9%AB%98%E9%80%9F%E6%B5%8F%E8%A7%88%E5%99%A8" target="_blank" rel="noopener noreferrer">搜狗高速浏览器</a>高速模式也使用 Webkit 作为内核</td></tr></tbody></table><h2 id="你能描述一下渐进增强和优雅降级之间的不同吗"><a class="header-anchor" href="#你能描述一下渐进增强和优雅降级之间的不同吗" aria-hidden="true">#</a> 你能描述一下渐进增强和优雅降级之间的不同吗?</h2><ul><li>渐进增强:先针对低版本浏览器写兼容，最后写标准写法</li></ul><div class="language-css"><pre><code><span class="token selector">.box</span><span class="token punctuation">{</span> <span class="token comment">/*渐进增强写法*/</span>\n\n<span class="token property">-webkit-transition</span><span class="token punctuation">:</span> all .5s<span class="token punctuation">;</span>\n\n  <span class="token property">-moz-transition</span><span class="token punctuation">:</span> all .5s<span class="token punctuation">;</span>\n\n​    <span class="token property">-o-transition</span><span class="token punctuation">:</span> all .5s<span class="token punctuation">;</span>\n\n​     <span class="token property">transition</span><span class="token punctuation">:</span> all .5s<span class="token punctuation">;</span>\n\n<span class="token punctuation">}</span>\n</code></pre></div><ul><li>优雅降级 先写标准写法，然后再针对各浏览器写兼容</li></ul><div class="language-css"><pre><code><span class="token selector">.box</span><span class="token punctuation">{</span> <span class="token comment">/*优雅降级写法*/</span>\n\n​     <span class="token property">transition</span><span class="token punctuation">:</span> all .5s<span class="token punctuation">;</span>\n\n​    <span class="token property">-o-transition</span><span class="token punctuation">:</span> all .5s<span class="token punctuation">;</span>\n\n  <span class="token property">-moz-transition</span><span class="token punctuation">:</span> all .5s<span class="token punctuation">;</span>\n\n<span class="token property">-webkit-transition</span><span class="token punctuation">:</span> all .5s<span class="token punctuation">;</span>\n\n<span class="token punctuation">}</span>\n\n</code></pre></div><h2 id="知道的网页制作会用到的图片格式有哪些？没有了解过-webp？"><a class="header-anchor" href="#知道的网页制作会用到的图片格式有哪些？没有了解过-webp？" aria-hidden="true">#</a> 知道的网页制作会用到的图片格式有哪些？没有了解过 webp？</h2><h3 id="常见的图片类型"><a class="header-anchor" href="#常见的图片类型" aria-hidden="true">#</a> 常见的图片类型</h3><ul><li>位图：其中包括<code>png</code> <code>jpg</code></li><li>矢量图: 常见的就是<code>svg</code></li></ul><h3 id="常见的图片格式"><a class="header-anchor" href="#常见的图片格式" aria-hidden="true">#</a> 常见的图片格式</h3><ul><li>GIF <ul><li>体积小</li><li>支持动画</li><li>但是只能处理 256 种颜色</li></ul></li><li>JPEG JPG <ul><li>支持渐进式加载</li><li>不支持透明</li></ul></li><li>PNG PNG24</li><li>Apng <ul><li>支持所有<code>png</code>的所有优点</li><li>支持动画</li></ul></li><li>WEBP <ul><li>它几乎集成了以上所有图片的优点，并且能够拥有更高的压缩率</li><li>但是存在兼容性问题</li></ul></li><li>SVG <ul><li>SVG 可被非常多的工具读取和修改（比如记事本）</li><li>SVG 与 JPEG 和 GIF 图像比起来，尺寸更小，且可压缩性更强。</li><li>SVG 是可伸缩的</li><li>SVG 图像可在任何的分辨率下被高质量地打印</li><li>SVG 可在图像质量不下降的情况下被放大</li><li>SVG 可以与 JavaScript 技术一起运行</li><li>SVG 文件是纯粹的 XML</li></ul></li></ul><h2 id="说说html5在标签、属性、存储、api-上的新特性，移除了那些元素？"><a class="header-anchor" href="#说说html5在标签、属性、存储、api-上的新特性，移除了那些元素？" aria-hidden="true">#</a> 说说<code>HTML5</code>在标签、属性、存储、API 上的新特性，移除了那些元素？</h2><blockquote><p>HTML5 现在已经不是 SGML 的子集，主要是关于图像，位置，存储，地理定位等功能的增加。</p></blockquote><h3 id="标签方面"><a class="header-anchor" href="#标签方面" aria-hidden="true">#</a> 标签方面</h3><ul><li>新增区块标签 <code>section</code> <code>article</code> <code>nav</code> <code>aside</code> ，语意化更好的内容元素 <ul><li>header footer 头尾</li><li>section（零碎的块） article（较为完整的块） 区域</li><li>nav 主要用于导航</li><li>aside 侧边栏（不很重要的内容）</li><li>em strong 强调</li><li>i icon</li></ul></li><li>表单增强日期 时间 搜索 表单验证 自动聚焦 表单控件，calendar、date、time、email、url、search</li><li>绘画 canvas 元素</li><li>用于媒介回放的 video 和 audio 元素</li></ul><h3 id="存储方面"><a class="header-anchor" href="#存储方面" aria-hidden="true">#</a> 存储方面</h3><ul><li>本地离线存储 localStorage 长期存储数据，浏览器关闭后数据不丢失；</li><li>sessionStorage 的数据在浏览器关闭后自动删除</li></ul><p><strong>关于存储的这部分建议参考</strong> <a href="https://fett.netlify.app/guides/javascript/storage.html" target="_blank" rel="noopener noreferrer">……/storage.html</a></p><blockquote><p>或者直接掘金 站内查看 <a href="https://juejin.cn/post/6889059860818870285" target="_blank" rel="noopener noreferrer">「前端厚说」Js 中的客户端存储方案</a></p></blockquote><h3 id="新的-api"><a class="header-anchor" href="#新的-api" aria-hidden="true">#</a> 新的 api</h3><ul><li>离线</li><li>音视频</li><li>图形 svg canvans</li><li>实时通信</li><li>设备的能力 获取陀螺仪的状态等等</li></ul><h3 id="移除的元素"><a class="header-anchor" href="#移除的元素" aria-hidden="true">#</a> 移除的元素</h3><ul><li>纯表现的元素：basefont，big，center，font, s，strike，tt，u；</li><li>对可用性产生负面影响的元素：frame，frameset，noframes；</li></ul>',25);l.render=function(e,s,l,i,c,u){return a(),t("div",null,[o,n(" [参考阅读百度百科]([https://baike.baidu.com/item/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%86%85%E6%A0%B8](https://baike.baidu.com/item/浏览器内核)) "),p])};export default l;export{s as __pageData};
