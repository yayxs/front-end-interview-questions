import{o as e,c as l,a as i}from"./app.78bcef79.js";const a='{"title":"开篇词","description":"","frontmatter":{},"headers":[{"level":2,"title":"开篇词","slug":"开篇词"},{"level":2,"title":"视频录制进度","slug":"视频录制进度"},{"level":2,"title":"HTML","slug":"html"},{"level":2,"title":"CSS","slug":"css"},{"level":2,"title":"JavaScript 核心体系","slug":"javascript-核心体系"},{"level":2,"title":"JavaScript 高级进阶","slug":"javascript-高级进阶"},{"level":3,"title":"异步专题","slug":"异步专题"},{"level":2,"title":"JavaScript 手写实现/手写代码","slug":"javascript-手写实现-手写代码"},{"level":2,"title":"浏览器","slug":"浏览器"},{"level":2,"title":"Node","slug":"node"},{"level":2,"title":"计算机网络","slug":"计算机网络"},{"level":2,"title":"算法与数据结构","slug":"算法与数据结构"},{"level":2,"title":"Webpack","slug":"webpack"},{"level":2,"title":"Vue","slug":"vue"},{"level":2,"title":"React","slug":"react"},{"level":2,"title":"框架（宏观）","slug":"框架（宏观）"},{"level":2,"title":"移动端","slug":"移动端"}],"relativePath":"index.md","lastUpdated":1625578115414}',o={},r=i('<h2 id="开篇词"><a class="header-anchor" href="#开篇词" aria-hidden="true">#</a> 开篇词</h2><p>你如果细心的话(可以 fork)，发现这是依赖<code>VuePress</code> 搭建的知识文档。此仓库包含<strong>三个部分（视频+文档+案例代码）</strong>。为什么会有这个项目，是因为我觉得基于每个前端面试题目去看原理。这也许是<code>破局</code>的较好的方式。 我是<code>小洋同学</code> 目前就职于 xx 上市公司。不管是<code>一年</code> 或者<code>三年</code> 甚至<code>校招</code>。扪心自问，自己的知识体系是不是<code>一碰就碎 异常的脆弱</code> 建立自己的知识宇宙 本身就是一个相当漫长的过程。在这条路上 希望我们一起前行。这条战线是相当长的，需要我们阅读大量的优质经典<code>纸质书</code> + <code>优秀电子书</code> <code>源码</code> <code>真题</code> <code>面经</code> 然后进行<code>filter</code> 并且需要我们甄别（有的伙伴甚至都完不成这个过程）</p><p>争做一个有主观见解的开发者而不是一个背面试题的机器。在<code>内卷如此严重</code> <code>焦虑各种贩卖</code>的环境下 ，希望你<strong>保持乐观积极，不要落伍 吃老本就很可怕了</strong></p><ul><li><p>在录制视频的时候，为了更好的演示案例代码，我想到的方式是起一个前端的静态服务然后读取<code>SRC</code> 下的代码案例</p><div class="language-js"><pre><code><span class="token comment">// server.js</span>\napp<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">2021</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">http://localhost:2021</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div></li><li><p>提供线上的文档 <a href="https://top-fe-iqa.netlify.app/" target="_blank" rel="noopener noreferrer">TOP-FE-IQA</a></p><ul><li>需要注意的是这份线上的文档目前是基于<code>VuePress</code> 可能更新不及时（酌情参考）</li><li>线上文档后续会重构一版本</li><li>我最近把一些 2020 年整理的注释了，等视频更新到了时候，就会放开</li></ul></li></ul><h2 id="视频录制进度"><a class="header-anchor" href="#视频录制进度" aria-hidden="true">#</a> 视频录制进度</h2><p>如果你希望看视频版本的话，请点击下方的视频连接会跳转到对应的<strong>B 站的技能点讲解分享</strong></p><blockquote><p>前端不要玩那么花里胡哨的东西，你知道为啥<strong>浏览器</strong> 是我除了<code>JS</code> 最先录制的视频。你不掌握一切瞎扯淡！！那么浏览器的定位是什么，其实是<code>JavaScript</code> 的运行环境，那么和它同样角色的还有什么——NodeJS</p></blockquote><ul><li><a href="https://www.bilibili.com/video/BV1cf4y1t76Y" target="_blank" rel="noopener noreferrer">前端厚说-浏览器工作渲染原理视频合集</a><ul><li><a href="https://www.bilibili.com/video/BV1Cf4y1z7o5" target="_blank" rel="noopener noreferrer">为什么需要了解甚至熟悉浏览器的渲染原理</a></li><li><a href="https://www.bilibili.com/video/BV1Zz4y127av" target="_blank" rel="noopener noreferrer">浏览器内核与浏览器渲染引擎工作原理</a></li><li><a href="https://www.bilibili.com/video/BV1yv411h77G" target="_blank" rel="noopener noreferrer">浏览器架构发展史</a></li><li><a href="https://www.bilibili.com/video/BV1cB4y1P7j1" target="_blank" rel="noopener noreferrer">浏览器新打开的每个 Tab 页是一个进程吗</a></li><li><a href="https://www.bilibili.com/video/BV1Q54y187zx" target="_blank" rel="noopener noreferrer">浏览器细节性的渲染流程（上）</a></li><li><a href="https://www.bilibili.com/video/BV1QZ4y1F7FQ" target="_blank" rel="noopener noreferrer">浏览器渲染流程，简单说说重绘回流（下）</a></li></ul></li></ul><blockquote><p>如果说你让我推荐个当下最该学 最应该学的方向 我会毫无疑问提交你<code>JavaScript</code> 但是 <code>JS</code>语言层面的细节你真的都清晰 执行上下文？ 闭包？ 作用域？</p></blockquote><ul><li><a href="https://www.bilibili.com/video/BV1Db4y1S7Qw" target="_blank" rel="noopener noreferrer">前端厚说-JavaScript 语言本身的细节</a><ul><li><a href="https://www.bilibili.com/video/BV1mv4y1f7XJ" target="_blank" rel="noopener noreferrer">前端面试大纲简览 2021 从面试点出发击破热门考点</a></li><li><a href="https://www.bilibili.com/video/BV135411H7SH" target="_blank" rel="noopener noreferrer">JavaScript 变量会有哪些面试考点？</a></li><li><a href="https://www.bilibili.com/video/BV1hf4y1W7MK" target="_blank" rel="noopener noreferrer">JavaScript 中的执行上下文与代码的执行过程如何</a></li><li><a href="./.html">执行上下文与 this 的关系</a></li></ul></li></ul><hr><p><strong>为了能更好的索引 我会定时不定时的把我整理的文档放到下边，包括 <code>HTML</code> <code>CSS</code> <code>JavaScript</code> 等等 还有一些框架 工程化 ……</strong></p><p><strong>前端 coder 如何有序的进阶</strong> ： 笔者认为 ： 你要掌握专业知识（HTML+ CSS + JavaScript + 浏览器）我们先重点看这部分。稍后可能才是能力进阶（所谓的框架原理 + 工程能力 + 开发技巧 + 思维） 最后你要能独立开发项目（出色的技术选型方案 + 项目设计 + 性能优化）</p><h2 id="html"><a class="header-anchor" href="#html" aria-hidden="true">#</a> HTML</h2><blockquote><p>关于 HTML 很纯粹的话也没什么好考察的，多半是结合<code>JS</code> 这部分我会参考权威书籍以及 MDN 文档</p></blockquote><ul><li><p><a href="https://github.com/yayxs/top-fe-iqa/issues/20" target="_blank" rel="noopener noreferrer">HTML 头部高频面试题及参考答案</a></p></li><li><p><a href="https://github.com/yayxs/top-fe-iqa/issues/62" target="_blank" rel="noopener noreferrer"><code>&lt;script&gt;</code> 标签的<code>async</code> 与<code>defer</code> 有什么区别</a></p></li><li><p><a href="./.html"><code>DOMContentLoaded</code>与<code>load</code>有什么不同呢</a></p></li><li><p>谈谈你对同源策略的理解以及什么是<code>CORS</code></p></li><li><p><code>JSONP</code>的原理是什么</p></li><li><p><code>XHTML</code> 与<code>HTML</code> 的区别</p></li><li><p>有几种文档模式（文档类型）</p></li><li><p><code>DOM</code> 操作能否带来性能问题</p></li><li><p>页面渲染 1 万个 DOM 元素 如何提升页面性能</p></li><li><p>事件委托到父节点或者<code>document</code> 中 哪个更好</p></li><li><p>为什么需要<code>虚拟DOM</code></p></li><li><p>为什么要用<code>JS</code> 描述 DOM 结构</p></li><li><p>简单描述虚拟 DOM 的实现原理</p></li><li><p>事件类型</p></li><li><p>说说<code>DOM</code> 中的事件流</p></li><li><p>Node 节点获取及增删查改</p></li><li><p>讲讲事件冒泡和事件捕获</p></li><li><p>什么是事件代理</p></li><li><p>知道什么是事件委托吗</p></li></ul><h2 id="css"><a class="header-anchor" href="#css" aria-hidden="true">#</a> CSS</h2><blockquote><p>CSS 主要考察的大致两个方面 页面布局的原理 + 页面布局的技巧</p><ul><li>页面布局原理：盒子模型 + 文档流 + 浮动布局</li><li>页面布局技巧： 传统布局 + Flex 布局 + Grid 布局</li></ul></blockquote><ul><li><a href="https://github.com/yayxs/top-fe-iqa/issues/21" target="_blank" rel="noopener noreferrer">画一条 0.5px 的线</a></li><li><a href="https://github.com/yayxs/top-fe-iqa/issues/22" target="_blank" rel="noopener noreferrer">css 中动画常考面试题</a></li><li><a href="https://github.com/yayxs/top-fe-iqa/issues/18" target="_blank" rel="noopener noreferrer">请说说 css 的选择器以及选择器优先级</a></li><li><a href="https://github.com/yayxs/top-fe-iqa/issues/19" target="_blank" rel="noopener noreferrer">我们常说的盒模型是指什么</a></li><li><a href="https://github.com/yayxs/top-fe-iqa/issues/23" target="_blank" rel="noopener noreferrer">谈谈你对 base64 的理解以及使用场景</a></li><li><a href="https://github.com/yayxs/top-fe-iqa/issues/24" target="_blank" rel="noopener noreferrer">你知道什么是 <code>BFC</code> 吗 BFC 的布局规则是什么？如何创建 BFC？</a></li><li><a href="https://github.com/yayxs/top-fe-iqa/issues/25" target="_blank" rel="noopener noreferrer">你是否使用过 calc() 函数</a></li><li><a href="https://github.com/yayxs/top-fe-iqa/issues/26" target="_blank" rel="noopener noreferrer">元素居中布局的几种实现方式</a></li><li>什么是文档流</li><li>浮动元素为啥无法撑开父元素 如何解决</li><li>对 Flex 布局和 Grid 布局的理解和使用</li><li>CSS 动画和 JavaScript 动画相比 有什么优缺点</li><li>如何实现左侧宽度固定，右侧宽度自适应的布局</li><li>css3 的新特性有哪些</li><li>使用过 css 预处理器吗</li><li>如何设计一个 4 列等宽布局，各列之间的边距是 10px（考虑浏览器的兼容性）？</li><li>CSS 如何实现三列布局，左侧和右侧固定宽度，中间自适应宽度？</li></ul><h2 id="javascript-核心体系"><a class="header-anchor" href="#javascript-核心体系" aria-hidden="true">#</a> JavaScript 核心体系</h2><ul><li><a href="./.html">不精确的计算之为什么 0.1 + 0.2 != 0.3</a></li><li><a href="./.html">==和===区别</a></li><li><a href="./.html">null 和 undefined 有什么区别</a></li><li><a href="https://github.com/yayxs/top-fe-iqa/issues/41" target="_blank" rel="noopener noreferrer">值类型与引用类型的区别</a></li><li><a href="./.html">JavaScript 的数据类型有哪些,存储有什么区别</a></li><li><a href="./.html">typeof 和 instanceof 检测数据类型有什么区别？</a></li><li><a href="https://github.com/yayxs/top-fe-iqa/issues/67" target="_blank" rel="noopener noreferrer">重中之重：JS 中的执行上下文</a></li><li><a href="https://github.com/yayxs/top-fe-iqa/issues/68" target="_blank" rel="noopener noreferrer">JS 中的变量提升现象 Hoisting</a></li><li><a href="https://github.com/yayxs/top-fe-iqa/issues/69" target="_blank" rel="noopener noreferrer">ES6 块级作用域?var、let 和 const 区别的实现原理</a></li><li><a href="https://github.com/yayxs/top-fe-iqa/issues/52" target="_blank" rel="noopener noreferrer">作用域?作用域链?</a></li><li><a href="https://github.com/yayxs/top-fe-iqa/issues/65" target="_blank" rel="noopener noreferrer">闭包及作用闭包有哪些使用场景？你如何理解 JavaScript 中的闭包？优缺点是什么</a></li><li><a href="https://github.com/yayxs/top-fe-iqa/issues/66" target="_blank" rel="noopener noreferrer">循环体与闭包结合：for 循环中的 var 声明</a></li><li><a href="https://github.com/yayxs/top-fe-iqa/issues/63" target="_blank" rel="noopener noreferrer">this 指向？设置 this 指向？箭头函数中 this? this 设计缺陷</a></li><li><a href="https://github.com/yayxs/top-fe-iqa/issues/64" target="_blank" rel="noopener noreferrer">new 操作符原理？内部机制？手写实现？</a></li><li><a href="https://github.com/yayxs/top-fe-iqa/issues/38" target="_blank" rel="noopener noreferrer">使用 sort 对数组进行排序[3,15,8,29,102,22]</a></li><li><a href="https://github.com/yayxs/top-fe-iqa/issues/40" target="_blank" rel="noopener noreferrer">判断数组的方法?如何检测数组</a></li><li><a href="./.html">JS 创建对象的方式</a></li><li><a href="https://github.com/yayxs/top-fe-iqa/issues/45" target="_blank" rel="noopener noreferrer">如何实现一个深浅拷贝？拷贝一个很多嵌套的对象怎么实现 写成什么样的深拷贝代码才能算合格？</a></li><li><a href="./.html">for..of, for..in 和 forEach,map 的区别</a></li><li><a href="./.html">ES5/ES6 的继承 分别有哪些优缺点？ JS 的继承到底有多少种实现方式呢 ES6 的 extends 关键字是用哪种继承方式实现的呢</a></li></ul><hr><ul><li><a href="http://javascript-puzzlers.herokuapp.com/" target="_blank" rel="noopener noreferrer">do you really know JavaScript</a></li><li><a href="https://github.com/yayxs/top-fe-iqa/issues/37" target="_blank" rel="noopener noreferrer">[&#39;1&#39;, &#39;2&#39;, &#39;3&#39;].map(parseInt)</a></li><li>函数科里化</li><li>如何让 (a == 1 &amp;&amp; a == 2 &amp;&amp; a == 3) 的值为 true？</li></ul><h2 id="javascript-高级进阶"><a class="header-anchor" href="#javascript-高级进阶" aria-hidden="true">#</a> JavaScript 高级进阶</h2><h3 id="异步专题"><a class="header-anchor" href="#异步专题" aria-hidden="true">#</a> 异步专题</h3><ul><li>同步编程和异步编程的区别在哪里？</li><li>JS 编程中为什么需要异步？</li><li>JS 异步编程方式发展历程</li><li><ul><li>常见的异步任务有哪些</li></ul></li><li>回调地狱缺点？有哪些方法可以解决？</li><li><code>Promise</code>构造函数是同步还是异步执行</li><li>setTimeout,Promise,Async/Await 的区别</li><li>Promise 的缺点</li><li>Promise 内部究竟有几种状态？</li><li>Promise 是怎么解决回调地狱问题的？</li><li>Promise 到底解决了什么痛点？这样的痛点还可以如何解决</li><li><code>React</code>中的<code>setState</code>是同步的还是异步的？什么时候同步什么时候异步?(实践题目)</li></ul><h2 id="javascript-手写实现-手写代码"><a class="header-anchor" href="#javascript-手写实现-手写代码" aria-hidden="true">#</a> JavaScript 手写实现/手写代码</h2><ul><li><a href="https://github.com/yayxs/top-fe-iqa/issues/5" target="_blank" rel="noopener noreferrer">JavaScrip 头部高频手写实现面试题目汇总</a></li><li><a href="https://github.com/yayxs/top-fe-iqa/issues/3" target="_blank" rel="noopener noreferrer">手写实现数组去重的 12 种方法</a></li><li><a href="https://github.com/yayxs/top-fe-iqa/issues/48" target="_blank" rel="noopener noreferrer">手写实现通用的类型检测方法</a></li><li><a href="https://github.com/yayxs/top-fe-iqa/issues/51" target="_blank" rel="noopener noreferrer">手写实现 4 种数组扁平化方式</a></li></ul><h2 id="浏览器"><a class="header-anchor" href="#浏览器" aria-hidden="true">#</a> 浏览器</h2><ul><li>为什么很多站点第二次打开速度会很快？</li><li>什么是 DNS 缓存</li><li>浏览器在进行页面布局过程中会做些什么</li><li>重绘和重排会导致什么问题</li><li>如何实现浏览器内多个标签页之间的通信?</li><li>常见的浏览器兼容性问题 -本地存储 cookie 与 token</li><li>了解 SameSite 属性吗</li></ul><h2 id="node"><a class="header-anchor" href="#node" aria-hidden="true">#</a> Node</h2><ul><li>谈谈对<code>RESTful</code> 的理解</li></ul><h2 id="计算机网络"><a class="header-anchor" href="#计算机网络" aria-hidden="true">#</a> 计算机网络</h2><blockquote><p>一名程序员，无论是应对日常开发、日常排查，还是解决突发的网络问题（网络调试、网络优化）都离不开计算机网络。而要想成为优秀的工程师、架构师，朝着更高阶、更高薪的岗位去晋升，补足编程必备基础知识——计算机网络是绕不过去的一关。</p></blockquote><ul><li>当在网页浏览器的地址栏输入<code>url</code>后，发生了什么</li><li>三次握手？TCP 为什么要 3 次握手？</li><li>HTTPS 协议的 TTFB 传输时间</li><li>HTTPS 链接的创建过程 以及为什么 HTTPS 就是安全的</li><li>什么是长链接 为什么需要长链接</li><li>HTTP2 的信道复用为什么能提高性能</li><li>浏览器输入 URL 后 HTTP 承担的角色是什么</li><li><code>URI</code> <code>URL</code> <code>URN</code> 的区别</li><li>收到 IP 数据包解析以后，它怎么知道这个分组应该投递到上层的哪一个协议（UDP 或 TCP）</li><li>你怎么理解<code>HTTP</code>和<code>TCP</code>的关系</li><li><code>telnet</code> 调试远程服务</li><li>用 <code>Whireshark</code>抓包定位网络故障</li></ul><h2 id="算法与数据结构"><a class="header-anchor" href="#算法与数据结构" aria-hidden="true">#</a> 算法与数据结构</h2><ul><li>数据结构中稳定的排序算法 不稳定的排序算法</li><li>时间复杂度 与空间复杂度代表什么</li></ul><h2 id="webpack"><a class="header-anchor" href="#webpack" aria-hidden="true">#</a> Webpack</h2><ul><li><p>介绍下 webpack 热更新原理，是如何做到在不刷新浏览器的前提下更新页面的</p></li><li><p>介绍<code>webpack</code> 的实现原理</p></li><li><p>Webpack 的 loader 和 plugins 的区别</p></li><li><p>谈谈<code>babel</code> 的原理是什么</p></li><li><p>你有使用过<code>webpack</code> 吗?简单说说你的看法</p></li><li><p>你有没有脱离脚手架，从基本搭建一个工程化的项目？</p></li><li><p><code>webpack</code> 的<code>loader</code> 与 <code>plugin</code> 有什么区别？谁先执行</p></li><li><p>介绍下 <code>webpack</code> 热更新原理，是如何做到在不刷新浏览器的前提下更新页面的？说说其原理</p></li><li><p>介绍<code>webpack</code> 的实现原理</p></li><li><p><code>webpack</code> 打包<code>react</code> 项目怎么减少<code>生成js</code> 的大小</p></li><li><p><code>webpack</code> 怎么处理模块化？模块化机制是怎么样的？</p></li><li><p>你还了解其他的打包工具吗？比如 <code>rollup</code>、<code>grunt</code>、<code>gulp</code> 它们有什么异同点、优劣势</p></li><li><p>有哪些常见的<code>loader</code></p></li><li><p>有哪些常见的<code>Plugin</code></p></li><li><p>简单说说 webpack 的构建流程是什么?</p></li><li><p>是否写过 Loader 和 Plugin？描述一下编写 loader 或 plugin 的思路？</p></li><li><p><code>webpack</code>怎么配置单页应用？怎么配置多页应用？</p></li><li><p><code>webpack</code>的打包原理是怎么样的</p></li><li><p>分别介绍 <code>bundle</code> <code>chunk</code> <code>module</code>是什么?</p></li><li><p><code>webpack</code>中 babel 的原理以及实现</p></li><li><p>代码分割的本质是什么？</p></li></ul><h2 id="vue"><a class="header-anchor" href="#vue" aria-hidden="true">#</a> Vue</h2><blockquote><p>讲道理，其实<code>Vue</code> 的官方文档写的真的非常好！！ 如果你什么都没开始，就一定把 Vue 的文档教程、以及 API 都好好<strong>研读研读</strong> 我是在看了<code>Vue生态的</code> 的文档（<code>VueCLI</code> <code>VUE2</code> <code>Vuex</code> <code>VueRouter</code> <code>VueLoader</code> ）然后基于<code>vue2的源码</code> 给大家整理了如下的面试题目 绝对不是口水话 目前的状态是视频还没开始录制 文字版已经在写了 如下的链接还不能点 不过你可以看看都是有哪些 耳熟能详的问题 当然了这只是一小部分</p></blockquote><ul><li><p><a href="https://github.com/yayxs/top-fe-iqa/issues/55" target="_blank" rel="noopener noreferrer">属性 data 的值为什么必须是函数</a></p></li><li><p><a href="https://github.com/yayxs/top-fe-iqa/issues/56" target="_blank" rel="noopener noreferrer">返回不是纯对象 vue 是怎么做的</a></p></li><li><p><a href="https://github.com/yayxs/top-fe-iqa/issues/57" target="_blank" rel="noopener noreferrer">为什么在初始化阶段才去进行合并处理</a></p></li><li><p><a href="https://github.com/yayxs/top-fe-iqa/issues/58" target="_blank" rel="noopener noreferrer">生命周期的合并策略是怎么进行的</a></p></li><li><p><a href="./.html"><code>beforeCreate Hook</code>被调用的时候有哪些特点</a></p></li><li><p><a href="https://github.com/yayxs/top-fe-iqa/issues/59" target="_blank" rel="noopener noreferrer">谈谈 vue 的样式绑定</a></p></li><li><p><a href="./.html">我们为什么可以在任何组件的模板中我们都可以直接使用 <code>&lt;transition/&gt;</code> 组件或者 <code>&lt;keep-alive/&gt;</code>等内置组件</a></p></li><li><p><a href="https://github.com/yayxs/top-fe-iqa/issues/60" target="_blank" rel="noopener noreferrer">vue 的数据双向绑定和 vuex 是否冲突</a></p></li><li><p><a href="https://github.com/yayxs/top-fe-iqa/issues/61" target="_blank" rel="noopener noreferrer">谈谈 Vue 的生命周期钩子的理解</a></p></li><li><p>谈谈对 vue 的认识 与其他框架的区别</p></li><li><p>new Vue 的时候 Vue 做了什么</p></li><li><p>vue 常见的指令有哪些</p></li><li><p>v-if v-show</p></li><li><p>v-for v-if 的优先级</p></li><li><p>v-model 的原理</p></li><li><p>编译器的与否有什么影响</p></li><li><p>template render 函数 el 挂载的优先级</p></li><li><p>什么是 MVVM 模型</p></li><li><p>什么是 MVVM？谈谈你的理解</p></li><li><p>请你谈谈 Vue 数据响应原理</p></li><li><p>Vue 内部是如何构建一个渲染函数的 <code>render</code> <code>template</code> <code>el</code> 的优先级如何</p></li><li><p>谈谈 Vue 中的 Transition 动画</p></li><li><p>你了解 Vue 中的<code>选项合并策略</code>嘛，请谈谈</p></li><li><p>Vue 中 <code>&lt;transition name=&quot;fade&quot;&gt;&lt;p v-if=&quot;seen&quot;&gt;现在你看到我了&lt;/p&gt;&lt;/transition&gt;</code> 组件是如何实现的？</p></li><li><p>vue 是如何实现数据的双向绑定</p></li><li><p>vue 的<code>单向数据流</code></p></li><li><p>虚拟 DOM 原理以及优缺点</p></li><li><p>Vue 是如何实现数据双向绑定的？</p></li><li><p>vue-router 的路由模式有几种</p></li><li><p>能说下 vue-router 中常用的 hash 和 history 路由模式实现原理吗？</p></li><li><p>vuex 的设计思想</p></li><li><p>单页面（SPA）应用的优缺点</p></li><li><p>谈谈你对 keep-alive 的了解？vue 里的 keep-alive 是怎么实现的</p></li><li><p>谈谈 Vue SSR 吗？说说 SSR？</p></li><li><p>谈谈<code>vue 3.0</code></p></li><li><p><code>$route</code>和<code>$router</code>的区别</p></li><li><p>scoped 属性作用</p></li><li><p><code>Vue-Router</code>的两种模式主要依赖什么实现的</p></li><li><p>Vue CLI 有哪些特性？</p></li><li><p>如何新增自定义指令</p></li><li><p>vue 的数据劫持在不同的版本里是如何处理的？</p></li><li><p>了解 Element UI 组件的框架设计吗？</p></li><li><p>如何自动屏蔽 Input 的自动密码填充？</p></li></ul><h2 id="react"><a class="header-anchor" href="#react" aria-hidden="true">#</a> React</h2><ul><li><a href="./.html">列表组件中的 key</a></li><li>为什么使用框架而不是原生</li><li>虚拟 DOM 的优劣如何</li><li>虚拟 DOM 的实现原理</li><li>React 最新的生命周期是怎样的?</li><li>React 的请求应该放在哪个生命周期中?</li><li>Ajax 请求放在 <code>componentDidMount</code> 里进行处理还是放在<code>componentWillMount</code> 里进行处理比较合适？</li><li>react-router 里的 <code>&lt;Link&gt;</code> 标签和 <code>&lt;a&gt;</code> 标签有什么区别</li><li>react 与<code>vue</code> 的区别</li><li>React 高阶组件的作用有哪些</li><li>简述下 flux 的思想</li><li>redux 的工作流程?</li><li>react-redux 是如何工作的?</li><li>redux 与 mobx 的区别?</li><li>redux 中如何进行异步操作?</li><li>React 组件通信如何实现?</li><li>React 如何进行组件/逻辑复用?</li><li>mixin、hoc、render props、react-hooks 的优劣如何？</li><li>你是如何理解 fiber 的?</li><li>有没有使用过 React Hooks？使用 React Hooks 的同时为什么需要使用高阶组件？</li><li>受控组件以及非受控组件的区别</li><li>react-router 里的 <code>&lt;Link&gt;</code> 标签和 <code>&lt;a&gt;</code> 标签有什么区别</li></ul><h2 id="框架（宏观）"><a class="header-anchor" href="#框架（宏观）" aria-hidden="true">#</a> 框架（宏观）</h2><ul><li>React 和 Vue 的区别？</li><li>能对比一下 Create React App 和 Vue CLI 吗？</li><li>了解 MVC / MVP / MVVM 的区别吗？</li></ul><h2 id="移动端"><a class="header-anchor" href="#移动端" aria-hidden="true">#</a> 移动端</h2><ul><li>触摸事件</li><li>移动端的兼容问题</li><li>移动端 300ms 延迟</li><li>移动端 rem</li><li>移动端 1px</li></ul>',48);o.render=function(i,a,o,t,p,c){return e(),l("div",null,[r])};export default o;export{a as __pageData};
