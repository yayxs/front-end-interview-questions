import{o as e,c as i,a as l}from"./app.0c83b2b0.js";const a='{"title":"常见的异步任务有哪些","description":"","frontmatter":{"title":"常见的异步任务有哪些"},"headers":[{"level":2,"title":"微任务队列（ES8术语）","slug":"微任务队列（es8术语）"},{"level":2,"title":"宏任务","slug":"宏任务"}],"relativePath":"guide/asynchronous/microtask_macrotask.md","lastUpdated":1615877423018}',t={},r=l('<h1 id="常见的异步任务有哪些"><a class="header-anchor" href="#常见的异步任务有哪些" aria-hidden="true">#</a> 常见的异步任务有哪些</h1><p>异步任务有两种类型：微任务（microtask）和宏任务（macrotask）。不同类型的任务会被分配到不同的任务队列中。当执行栈中的所有任务都执行完毕后，会去检查微任务队列中是否有事件存在，如果存在，则会依次执行微任务队列中事件对应的回调，直到为空。然后去宏任务队列中取出一个事件，把对应的回调加入当前执行栈，当执行栈中的所有任务都执行完毕后，检查微任务队列中是否有事件存在。</p><ul><li>队列是先进先出 首先进入队列的任务首先执行</li><li>JS引擎中没有其他任务 才执行任务队列</li></ul><h2 id="微任务队列（es8术语）"><a class="header-anchor" href="#微任务队列（es8术语）" aria-hidden="true">#</a> 微任务队列（ES8术语）</h2><p>属于微任务的事件包括但不限于以下几种：</p><ul><li>Promise.then</li><li>Object.observe</li><li>process.nextTick</li></ul><h2 id="宏任务"><a class="header-anchor" href="#宏任务" aria-hidden="true">#</a> 宏任务</h2><p>属于宏任务的事件包括但不限于以下几种：</p><ul><li>setTimeout</li><li>setInterval</li><li>setImmediate</li><li>IO</li></ul>',9);t.render=function(l,a,t,s,d,h){return e(),i("div",null,[r])};export default t;export{a as __pageData};
