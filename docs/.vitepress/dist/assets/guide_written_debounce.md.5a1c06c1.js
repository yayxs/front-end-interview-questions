import{o as n,c as s,a}from"./app.0c83b2b0.js";const t='{"title":"手写实现防抖函数（debounce）","description":"","frontmatter":{"title":"手写实现防抖函数（debounce）"},"headers":[{"level":2,"title":"第一个防抖函数","slug":"第一个防抖函数"},{"level":2,"title":"第二个防抖函数解决this的指向问题","slug":"第二个防抖函数解决this的指向问题"},{"level":2,"title":"第三个防抖函数修复事件对象为undefined的问题","slug":"第三个防抖函数修复事件对象为undefined的问题"},{"level":2,"title":"小结","slug":"小结"},{"level":3,"title":"业务场景","slug":"业务场景"}],"relativePath":"guide/written/debounce.md","lastUpdated":1615877423030}',p={},o=a('<h1 id="手写实现防抖函数（debounce-防抖动）"><a class="header-anchor" href="#手写实现防抖函数（debounce-防抖动）" aria-hidden="true">#</a> 手写实现防抖函数（debounce/防抖动）</h1><h2 id="第一个防抖函数"><a class="header-anchor" href="#第一个防抖函数" aria-hidden="true">#</a> 第一个防抖函数</h2><div class="language-js"><pre><code><span class="token keyword">let</span> num <span class="token operator">=</span><span class="token number">1</span>\n      <span class="token keyword">const</span> container <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.container&#39;</span><span class="token punctuation">)</span>\n      <span class="token comment">// 基本函数内容</span>\n      <span class="token keyword">function</span> <span class="token function">commonFnCon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        container<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> num<span class="token operator">++</span>\n      <span class="token punctuation">}</span>\n      <span class="token keyword">function</span> <span class="token function">baseShowNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token function">commonFnCon</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>  <span class="token comment">// &lt;div&gt;num&lt;/div&gt;</span>\n      <span class="token punctuation">}</span>\n      <span class="token keyword">function</span> <span class="token function">firstShowNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token function">commonFnCon</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token comment">// this 指的是 window</span>\n      <span class="token punctuation">}</span>\n      \n      <span class="token keyword">function</span> <span class="token function">firstDebounce</span><span class="token punctuation">(</span><span class="token parameter">fn<span class="token punctuation">,</span>wait</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">let</span> timerId <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n          <span class="token keyword">if</span><span class="token punctuation">(</span>timerId<span class="token punctuation">)</span> <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timerId<span class="token punctuation">)</span>\n          <span class="token comment">// 一句话：一件事情触发了，1s内不再触发此事件</span>\n          timerId <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>fn<span class="token punctuation">,</span>wait<span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n      <span class="token comment">// container.onmousemove = baseShowNumber</span>\n      container<span class="token punctuation">.</span>onmousemove <span class="token operator">=</span> <span class="token function">firstDebounce</span><span class="token punctuation">(</span>firstShowNumber<span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">)</span>\n</code></pre></div><h2 id="第二个防抖函数解决this的指向问题"><a class="header-anchor" href="#第二个防抖函数解决this的指向问题" aria-hidden="true">#</a> 第二个防抖函数解决this的指向问题</h2><div class="language-js"><pre><code><span class="token keyword">let</span> num <span class="token operator">=</span><span class="token number">1</span>\n      <span class="token keyword">const</span> container <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.container&#39;</span><span class="token punctuation">)</span>\n      <span class="token comment">// 基本函数内容</span>\n      <span class="token keyword">function</span> <span class="token function">commonFnCon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        container<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> num<span class="token operator">++</span>\n      <span class="token punctuation">}</span>\n      <span class="token keyword">function</span> <span class="token function">baseShowNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token function">commonFnCon</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>  <span class="token comment">// &lt;div&gt;num&lt;/div&gt;</span>\n      <span class="token punctuation">}</span>\n      <span class="token keyword">function</span> <span class="token function">secShowNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token function">commonFnCon</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;sec&#39;</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token comment">// this 指的是 window</span>\n      <span class="token punctuation">}</span>\n      \n      <span class="token keyword">function</span> <span class="token function">secDebounce</span><span class="token punctuation">(</span><span class="token parameter">fn<span class="token punctuation">,</span>wait</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">let</span> timerId <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n          <span class="token keyword">let</span> ctx <span class="token operator">=</span> <span class="token keyword">this</span> \n          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;ctx&#39;</span><span class="token punctuation">,</span>ctx<span class="token punctuation">)</span> <span class="token comment">// 此时的ctx 就是baseShowNumber中的&lt;div&gt;num&lt;/div&gt;</span>\n\n          <span class="token keyword">if</span><span class="token punctuation">(</span>timerId<span class="token punctuation">)</span> <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timerId<span class="token punctuation">)</span>\n          <span class="token comment">// 一句话：一件事情触发了，1s内不再触发此事件</span>\n          timerId <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n            <span class="token comment">// 接下来就是把当前环境的this绑定到事件函数（这里指的是baseShowNumber）上</span>\n            <span class="token comment">// 并执行该事件函数</span>\n            <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>wait<span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n      <span class="token comment">// container.onmousemove = baseShowNumber</span>\n      container<span class="token punctuation">.</span>onmousemove <span class="token operator">=</span> <span class="token function">secDebounce</span><span class="token punctuation">(</span>secShowNumber<span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">)</span>\n\n</code></pre></div><h2 id="第三个防抖函数修复事件对象为undefined的问题"><a class="header-anchor" href="#第三个防抖函数修复事件对象为undefined的问题" aria-hidden="true">#</a> 第三个防抖函数修复事件对象为undefined的问题</h2><div class="language-js"><pre><code><span class="token keyword">let</span> num <span class="token operator">=</span><span class="token number">1</span>\n      <span class="token keyword">const</span> container <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.container&#39;</span><span class="token punctuation">)</span>\n      <span class="token comment">// 基本函数内容</span>\n      <span class="token keyword">function</span> <span class="token function">commonFnCon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        container<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> num<span class="token operator">++</span>\n      <span class="token punctuation">}</span>\n      <span class="token keyword">function</span> <span class="token function">baseShowNumber</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token function">commonFnCon</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token comment">// MouseEvent </span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>  <span class="token comment">// &lt;div&gt;num&lt;/div&gt;</span>\n      <span class="token punctuation">}</span>\n      <span class="token keyword">function</span> <span class="token function">thirdShowNumber</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token function">commonFnCon</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span>\n      \n      <span class="token keyword">function</span> <span class="token function">thirdDebounce</span><span class="token punctuation">(</span><span class="token parameter">fn<span class="token punctuation">,</span>wait</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">let</span> timerId <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n          <span class="token keyword">let</span> ctx <span class="token operator">=</span> <span class="token keyword">this</span>\n          <span class="token keyword">let</span> args <span class="token operator">=</span>  arguments\n          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;ctx&#39;</span><span class="token punctuation">,</span>ctx<span class="token punctuation">)</span> <span class="token comment">// 此时的ctx 就是baseShowNumber中的&lt;div&gt;num&lt;/div&gt;</span>\n          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;args&#39;</span><span class="token punctuation">,</span>arguments<span class="token punctuation">)</span> <span class="token comment">// 此时的arguments 刚好是个伪数组，其中包含事件对象</span>\n          <span class="token keyword">if</span><span class="token punctuation">(</span>timerId<span class="token punctuation">)</span> <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timerId<span class="token punctuation">)</span>\n          <span class="token comment">// 一句话：一件事情触发了，1s内不再触发此事件</span>\n          timerId <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n            <span class="token comment">// 接下来就是把当前环境的this绑定到事件函数（这里指的是baseShowNumber）上</span>\n            <span class="token comment">// 并执行该事件函数</span>\n            <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span>args<span class="token punctuation">)</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>wait<span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n      <span class="token comment">// container.onmousemove = baseShowNumber</span>\n      container<span class="token punctuation">.</span>onmousemove <span class="token operator">=</span> <span class="token function">thirdDebounce</span><span class="token punctuation">(</span>thirdShowNumber<span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">)</span>\n</code></pre></div><h2 id="小结"><a class="header-anchor" href="#小结" aria-hidden="true">#</a> 小结</h2><p>上述实现的依然是不够完整的，接下来自己再延伸探索吧，贴上我们企业项目中的防抖函数</p><div class="language-js"><pre><code><span class="token keyword">const</span> <span class="token function-variable function">debounce</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">fn<span class="token punctuation">,</span> delay<span class="token punctuation">,</span> isImmediate</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> timer <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">var</span> that <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>\n        <span class="token keyword">var</span> args <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">var</span> callNow <span class="token operator">=</span> <span class="token operator">!</span>timer <span class="token operator">&amp;&amp;</span> isImmediate<span class="token punctuation">;</span>\n\n        <span class="token keyword">if</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span> <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">// 非立即执行</span>\n        timer <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            timer <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>isImmediate<span class="token punctuation">)</span> <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>that<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span> delay<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">// 立即执行</span>\n        <span class="token keyword">if</span><span class="token punctuation">(</span>callNow<span class="token punctuation">)</span> <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>that<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n <span class="token keyword">export</span> <span class="token punctuation">{</span>\n     debounce\n <span class="token punctuation">}</span>\n</code></pre></div><h3 id="业务场景"><a class="header-anchor" href="#业务场景" aria-hidden="true">#</a> 业务场景</h3><ul><li>主要是点击按钮刷新操作，用于防止频繁刷新</li><li>还有就是form表单的验证(异步调接口的验证场景)</li></ul>',12);p.render=function(a,t,p,c,e,u){return n(),s("div",null,[o])};export default p;export{t as __pageData};
