import{o as t,c as e,a as d}from"./app.78bcef79.js";const l='{"title":"请说说css的选择器以及选择器优先级","description":"","frontmatter":{"title":"请说说`css`的选择器以及选择器优先级"},"headers":[{"level":2,"title":"前言","slug":"前言"},{"level":2,"title":"选择器","slug":"选择器"},{"level":3,"title":"选择器的基本分类","slug":"选择器的基本分类"},{"level":2,"title":"选择器的权重","slug":"选择器的权重"}],"relativePath":"guide/css/selector.md","lastUpdated":1625578109838}',a={},r=d('<h1 id="请说说css的选择器以及选择器优先级"><a class="header-anchor" href="#请说说css的选择器以及选择器优先级" aria-hidden="true">#</a> 请说说<code>css</code>的选择器以及选择器优先级</h1><h2 id="前言"><a class="header-anchor" href="#前言" aria-hidden="true">#</a> 前言</h2><p>选择器的基本规则大致是是以下的方式，基本的作用就是选择 <code>html</code> 元素</p><div class="language-"><pre><code>选择器{\n  属性 值;\n  属性 值\n}\n</code></pre></div><p>需要注意的是，浏览器去找元素的时候，是<code>从右往左</code> 的方式</p><div class="language-css"><pre><code><span class="token selector">div .box a</span> <span class="token punctuation">{</span>\n\n<span class="token punctuation">}</span>\n</code></pre></div><p><code>!important &gt; 内联样式 = 外联样式 &gt; ID选择器 &gt; 类选择器 = 伪类选择器 = 属性选择器 &gt; 元素选择器 = 伪元素选择器 &gt; 通配选择器 = 后代选择器 = 兄弟选择器</code></p><p>这里会牵扯一个权重的问题 直观来看</p><div class="language-"><pre><code> 10000：!important\n 1000：内联样式、外联样式\n 100：ID选择器\n 10：类选择器、伪类选择器、属性选择器\n 1：元素选择器、伪元素选择器\n 0：通配选择器、后代选择器、兄弟选择器\n</code></pre></div><h2 id="选择器"><a class="header-anchor" href="#选择器" aria-hidden="true">#</a> 选择器</h2><h3 id="选择器的基本分类"><a class="header-anchor" href="#选择器的基本分类" aria-hidden="true">#</a> 选择器的基本分类</h3><ul><li>类选择器</li><li>ID 选择器 页面中一般是唯一的</li><li>元素选择器</li><li>伪元素选择器(连续有；两个英文冒号) ::before 不会dom树中</li><li>属性选择器 [type=radio]{}</li><li>伪类选择器 :hover :first-child :last-child</li><li>组合选择器</li><li>否定的选择器 反向选择</li><li>通用选择器</li></ul><blockquote><p>基本的选择器</p></blockquote><table><thead><tr><th>选择器</th><th>别名</th><th>使用</th></tr></thead><tbody><tr><td>*</td><td>通配符</td><td>*{}</td></tr><tr><td>tag</td><td>标签选择器</td><td>p{}</td></tr><tr><td>.class</td><td>类</td><td>.{}</td></tr><tr><td>#id</td><td>id 选择器</td><td>#{}</td></tr></tbody></table><blockquote><p>关系选择器 常见的符号 &gt; ~ +</p></blockquote><ul><li>后代选择器</li><li>相邻后代 &gt; 仅仅选择合乎规则的的兄弟元素</li><li>兄弟选择器 ~ 选择当前元素后面的合乎规则的元素</li><li>相邻兄弟 + 选择当前元素相邻的合乎规则的的兄弟元素</li></ul><h2 id="选择器的权重"><a class="header-anchor" href="#选择器的权重" aria-hidden="true">#</a> 选择器的权重</h2><p>优先级高的层叠优先级较低 的样式，其实是比较复杂的问题</p><table><thead><tr><th style="text-align:center;">选择器</th><th style="text-align:center;">权重位</th></tr></thead><tbody><tr><td style="text-align:center;">行内</td><td style="text-align:center;">+1000</td></tr><tr><td style="text-align:center;">id</td><td style="text-align:center;">+0100</td></tr><tr><td style="text-align:center;">类选择器、属性</td><td style="text-align:center;">+0010</td></tr><tr><td style="text-align:center;">元素、伪元素</td><td style="text-align:center;">+ 0001</td></tr><tr><td style="text-align:center;">*</td><td style="text-align:center;">+0000</td></tr><tr><td style="text-align:center;">继承</td><td style="text-align:center;">没有权重</td></tr></tbody></table><p>通过 <code>color: powderblue !important;</code> 提高自己的权重（其优先级是最高的），那相同的权重后写的生效</p>',20);a.render=function(d,l,a,i,n,s){return t(),e("div",null,[r])};export default a;export{l as __pageData};
