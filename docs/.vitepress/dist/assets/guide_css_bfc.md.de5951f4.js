import{o as n,c as a,a as s}from"./app.0c83b2b0.js";const t='{"title":"你知道什么是 BFC 吗 BFC 的布局规则是什么？如何创建 BFC？","description":"","frontmatter":{"title":"你知道什么是 `BFC` 吗 BFC 的布局规则是什么？如何创建 BFC？"},"headers":[{"level":2,"title":"对块级上下文的理解","slug":"对块级上下文的理解"},{"level":2,"title":"BFC的布局规则","slug":"bfc的布局规则"},{"level":2,"title":"触发条件是什么","slug":"触发条件是什么"},{"level":2,"title":"作用与场景","slug":"作用与场景"}],"relativePath":"guide/css/bfc.md","lastUpdated":1615877423019}',e={},p=s('<h1 id="你知道什么是-bfc-吗-bfc-的布局规则是什么？如何创建-bfc？"><a class="header-anchor" href="#你知道什么是-bfc-吗-bfc-的布局规则是什么？如何创建-bfc？" aria-hidden="true">#</a> 你知道什么是 <code>BFC</code> 吗 BFC 的布局规则是什么？如何创建 BFC？</h1><div class="tip custom-block"><p class="custom-block-title">TIP</p><ol><li>谈谈对 BFC 的理解 你知道什么是 <code>BFC</code> 吗</li><li>BFC 的布局规则是什么？</li><li>如何创建 BFC？触发条件是什么</li><li>作用与场景是什么</li></ol></div><h2 id="对块级上下文的理解"><a class="header-anchor" href="#对块级上下文的理解" aria-hidden="true">#</a> 对块级上下文的理解</h2><ul><li>Block</li><li>Formatting Context</li></ul><p><code>块级格式化上下文</code> <code>页面中独立的渲染区域</code> <code>决定内部</code> <code>与外部无关</code> <code>相互隔离</code> 决定渲染区域里节点的排版、关系和相互作用的渲染规则</p><div class="language-"><pre><code>上下文\t缩写\t版本\t声明\n块格式化上下文\tBFC\t2\t块级盒子容器\n行内格式化上下文\tIFC\t2\t行内盒子容器\n弹性格式化上下文\tFFC\t3\t弹性盒子容器\n格栅格式化上下文\tGFC\t3\t格栅盒子容器\n</code></pre></div><h2 id="bfc的布局规则"><a class="header-anchor" href="#bfc的布局规则" aria-hidden="true">#</a> BFC的布局规则</h2><blockquote><p>BFC是页面上一个独立且隔离的渲染区域，容器里的子节点不会在布局上影响到外面的节点，反之亦然。</p></blockquote><ul><li>子节点的垂直方向距离由margin决定，相邻节点的margin会发生重叠，以最大margin为合并值</li><li>BFC区域不会与同级浮动区域重叠</li></ul><h2 id="触发条件是什么"><a class="header-anchor" href="#触发条件是什么" aria-hidden="true">#</a> 触发条件是什么</h2><ul><li>根元素 html</li><li>绝对定位的节点 position:absolute/fixed</li><li>浮动的节点 float:left/right</li><li>非溢出可见节点 overflow !visible</li><li>被定义成块级的非块级节点 display 表格布局或者弹性布局 inline-block（行内块）、table-cell（表格单元格）、table-caption（表格标题）</li></ul><p>等等……</p><h2 id="作用与场景"><a class="header-anchor" href="#作用与场景" aria-hidden="true">#</a> 作用与场景</h2><ul><li>防止<code>margin</code> 发生重叠（相邻元素的外边距重叠问题）</li></ul><p>我们先看一般的情况下,上下元素都有<code>margin</code> 的情况下，会出现重叠的情况,实际只有 50px，所谓的塌陷其实是两个BFC的相邻盒或父子盒相互作用时产生的效果，两个盒子会取相邻边最大margin作为相邻边的共用margin。</p><div class="language-css"><pre><code><span class="token selector">.box1</span> <span class="token punctuation">{</span>\n  <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token selector">.box2</span> <span class="token punctuation">{</span>\n  <span class="token property">margin-top</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre></div><ul><li>防止浮动节点被覆盖</li></ul><div class="language-css"><pre><code><span class="token selector">.parent</span> <span class="token punctuation">{</span>\n  <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>\n  <span class="token comment">/* 当父元素不写高度的时候会发生高度塌陷 */</span>\n  <span class="token comment">/* height: 100px; */</span>\n  <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #ccc<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.float</span> <span class="token punctuation">{</span>\n  <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>\n  <span class="token property">width</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>\n  <span class="token property">height</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>\n  <span class="token property">background-color</span><span class="token punctuation">:</span> #eee<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre></div><ul><li>清除浮动</li></ul><div class="language-css"><pre><code><span class="token property">overflow</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>\n<span class="token comment">/* 或者 */</span>\n<span class="token property">display</span><span class="token punctuation">:</span> flow-root<span class="token punctuation">;</span>\n\n\n</code></pre></div><p><strong>或者开发中常用的清除浮动的方式</strong><a href="https://fett.netlify.app/guides/css/css_mixin.html" target="_blank" rel="noopener noreferrer">https://fett.netlify.app/guides/css/css_mixin.html</a></p>',21);e.render=function(s,t,e,o,l,c){return n(),a("div",null,[p])};export default e;export{t as __pageData};
