import{o as n,c as s,a}from"./app.78bcef79.js";const t='{"title":"严格模式的约束,现代模式","description":"","frontmatter":{"title":"严格模式的约束,现代模式"},"relativePath":"guide/javascript/use_strict.md","lastUpdated":1625578115387}',p={},o=a('<p><code>use strict</code>当它处于脚本文件的顶部时，则整个脚本文件都将以“现代”模式进行工作。一旦进入严格模式没有回头路了</p><div class="language-js"><pre><code><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token string">&quot;use strict&quot;</span><span class="token punctuation">;</span>\n\n  <span class="token comment">// ...你的代码...</span>\n\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><p>没有类似于 &quot;no use strict&quot; 这样的指令可以使程序返回默认模式。</p><p>一旦进入了严格模式，就没有回头路了。</p><ol><li>函数不能以 eval 或 arguments 作为名称；</li><li>函数的参数不能叫 eval 或 arguments；</li><li>两个命名参数不能叫同一个名称</li><li>严格模式禁止自动或隐式地创建全局变量</li><li>如果使用严格模式（strict mode），那么全局对象将无法使用默认绑定，因此 this 会绑定 到 undefined</li></ol><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token string">&quot;use strict&quot;</span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span> <span class="token keyword">this</span><span class="token punctuation">.</span>a <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>\n<span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// TypeError: this is undefined</span>\n</code></pre></div><ol start="6"><li>严格模式下，函数只能声明在当前作用域的顶层</li></ol><div class="language-js"><pre><code><span class="token comment">// 不报错</span>\n<span class="token string">&#39;use strict&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 报错</span>\n<span class="token string">&#39;use strict&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>\n  <span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n</code></pre></div><ol start="7"><li></li></ol><div class="language-js"><pre><code><span class="token string">&quot;use strict&quot;</span><span class="token punctuation">;</span>\n\nnum <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span> <span class="token comment">// 错误：num 未定义</span>\n</code></pre></div>',10);p.render=function(a,t,p,c,e,u){return n(),s("div",null,[o])};export default p;export{t as __pageData};
